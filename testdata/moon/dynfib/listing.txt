0: class Example 
	class
		Type=Terminal
		Loc=1, 1
	Example
		Type=Identifier
		Loc=1, 7

1: { 
	{
		Type=Terminal
		Loc=2, 1

2:     void main() 
	void
		Type=Terminal
		Loc=3, 5
	main
		Type=Terminal
		Loc=3, 10
	(
		Type=Terminal
		Loc=3, 14
	)
		Type=Terminal
		Loc=3, 15

3:     {
	{
		Type=Terminal
		Loc=4, 5

4: 		int result;
	int
		Type=Terminal
		Loc=5, 9
	result
		Type=Identifier
		Loc=5, 13
	;
		Type=Terminal
		Loc=5, 19

5: 		result = dynfib(20);
	result
		Type=Identifier
		Loc=6, 9
	=
		Type=Terminal
		Loc=6, 16
	dynfib
		Type=Identifier
		Loc=6, 18
	(
		Type=Terminal
		Loc=6, 24
	20
		Type=Number
		Loc=6, 25
	)
		Type=Terminal
		Loc=6, 27
	;
		Type=Terminal
		Loc=6, 28

6: 		System.out('F','i','b','(','2','0',')','=', '"');
	System
		Type=Terminal
		Loc=7, 9
	.
		Type=Terminal
		Loc=7, 15
	out
		Type=Terminal
		Loc=7, 16
	(
		Type=Terminal
		Loc=7, 19
	'F'
		Type=CharConst
		Loc=7, 20
	,
		Type=Terminal
		Loc=7, 23
	'i'
		Type=CharConst
		Loc=7, 24
	,
		Type=Terminal
		Loc=7, 27
	'b'
		Type=CharConst
		Loc=7, 28
	,
		Type=Terminal
		Loc=7, 31
	'('
		Type=CharConst
		Loc=7, 32
	,
		Type=Terminal
		Loc=7, 35
	'2'
		Type=CharConst
		Loc=7, 36
	,
		Type=Terminal
		Loc=7, 39
	'0'
		Type=CharConst
		Loc=7, 40
	,
		Type=Terminal
		Loc=7, 43
	')'
		Type=CharConst
		Loc=7, 44
	,
		Type=Terminal
		Loc=7, 47
	'='
		Type=CharConst
		Loc=7, 48
	,
		Type=Terminal
		Loc=7, 51
	'"'
		Type=CharConst
		Loc=7, 53
	)
		Type=Terminal
		Loc=7, 56
	;
		Type=Terminal
		Loc=7, 57

7: 		printNumber(result);
	printNumber
		Type=Identifier
		Loc=8, 9
	(
		Type=Terminal
		Loc=8, 20
	result
		Type=Identifier
		Loc=8, 21
	)
		Type=Terminal
		Loc=8, 27
	;
		Type=Terminal
		Loc=8, 28

8: 		System.out('"','\n');
	System
		Type=Terminal
		Loc=9, 9
	.
		Type=Terminal
		Loc=9, 15
	out
		Type=Terminal
		Loc=9, 16
	(
		Type=Terminal
		Loc=9, 19
	'"'
		Type=CharConst
		Loc=9, 20
	,
		Type=Terminal
		Loc=9, 23
	'
'
		Type=CharConst
		Loc=9, 24
	)
		Type=Terminal
		Loc=9, 28
	;
		Type=Terminal
		Loc=9, 29

9: 		if (result == 6765)
	if
		Type=Terminal
		Loc=10, 9
	(
		Type=Terminal
		Loc=10, 12
	result
		Type=Identifier
		Loc=10, 13
	==
		Type=Terminal
		Loc=10, 20
	6765
		Type=Number
		Loc=10, 23
	)
		Type=Terminal
		Loc=10, 27

10: 		{
	{
		Type=Terminal
		Loc=11, 9

11: 			System.out('P','A','S','S','\n');
	System
		Type=Terminal
		Loc=12, 13
	.
		Type=Terminal
		Loc=12, 19
	out
		Type=Terminal
		Loc=12, 20
	(
		Type=Terminal
		Loc=12, 23
	'P'
		Type=CharConst
		Loc=12, 24
	,
		Type=Terminal
		Loc=12, 27
	'A'
		Type=CharConst
		Loc=12, 28
	,
		Type=Terminal
		Loc=12, 31
	'S'
		Type=CharConst
		Loc=12, 32
	,
		Type=Terminal
		Loc=12, 35
	'S'
		Type=CharConst
		Loc=12, 36
	,
		Type=Terminal
		Loc=12, 39
	'
'
		Type=CharConst
		Loc=12, 40
	)
		Type=Terminal
		Loc=12, 44
	;
		Type=Terminal
		Loc=12, 45

12: 		}
	}
		Type=Terminal
		Loc=13, 9

13: 		else
	else
		Type=Terminal
		Loc=14, 9

14: 		{
	{
		Type=Terminal
		Loc=15, 9

15: 			System.out('F','A','I','L','\n');
	System
		Type=Terminal
		Loc=16, 13
	.
		Type=Terminal
		Loc=16, 19
	out
		Type=Terminal
		Loc=16, 20
	(
		Type=Terminal
		Loc=16, 23
	'F'
		Type=CharConst
		Loc=16, 24
	,
		Type=Terminal
		Loc=16, 27
	'A'
		Type=CharConst
		Loc=16, 28
	,
		Type=Terminal
		Loc=16, 31
	'I'
		Type=CharConst
		Loc=16, 32
	,
		Type=Terminal
		Loc=16, 35
	'L'
		Type=CharConst
		Loc=16, 36
	,
		Type=Terminal
		Loc=16, 39
	'
'
		Type=CharConst
		Loc=16, 40
	)
		Type=Terminal
		Loc=16, 44
	;
		Type=Terminal
		Loc=16, 45

16: 		}
	}
		Type=Terminal
		Loc=17, 9

17:     }
	}
		Type=Terminal
		Loc=18, 5

18: 	

19: 	int dynfib(int target)
	int
		Type=Terminal
		Loc=20, 5
	dynfib
		Type=Identifier
		Loc=20, 9
	(
		Type=Terminal
		Loc=20, 15
	int
		Type=Terminal
		Loc=20, 16
	target
		Type=Identifier
		Loc=20, 20
	)
		Type=Terminal
		Loc=20, 26

20: 	{
	{
		Type=Terminal
		Loc=21, 5

21: 		int[] data = new int[200];
	int
		Type=Terminal
		Loc=22, 9
	[
		Type=Terminal
		Loc=22, 12
	]
		Type=Terminal
		Loc=22, 13
	data
		Type=Identifier
		Loc=22, 15
	=
		Type=Terminal
		Loc=22, 20
	new
		Type=Terminal
		Loc=22, 22
	int
		Type=Terminal
		Loc=22, 26
	[
		Type=Terminal
		Loc=22, 29
	200
		Type=Number
		Loc=22, 30
	]
		Type=Terminal
		Loc=22, 33
	;
		Type=Terminal
		Loc=22, 34

22: 		int i;
	int
		Type=Terminal
		Loc=23, 9
	i
		Type=Identifier
		Loc=23, 13
	;
		Type=Terminal
		Loc=23, 14

23: 		

24: 		data[0] = 0;
	data
		Type=Identifier
		Loc=25, 9
	[
		Type=Terminal
		Loc=25, 13
	0
		Type=Number
		Loc=25, 14
	]
		Type=Terminal
		Loc=25, 15
	=
		Type=Terminal
		Loc=25, 17
	0
		Type=Number
		Loc=25, 19
	;
		Type=Terminal
		Loc=25, 20

25: 		data[1] = 1;
	data
		Type=Identifier
		Loc=26, 9
	[
		Type=Terminal
		Loc=26, 13
	1
		Type=Number
		Loc=26, 14
	]
		Type=Terminal
		Loc=26, 15
	=
		Type=Terminal
		Loc=26, 17
	1
		Type=Number
		Loc=26, 19
	;
		Type=Terminal
		Loc=26, 20

26: 		i = 2;
	i
		Type=Identifier
		Loc=27, 9
	=
		Type=Terminal
		Loc=27, 11
	2
		Type=Number
		Loc=27, 13
	;
		Type=Terminal
		Loc=27, 14

27: 		while(i <= target)
	while
		Type=Terminal
		Loc=28, 9
	(
		Type=Terminal
		Loc=28, 14
	i
		Type=Identifier
		Loc=28, 15
	<=
		Type=Terminal
		Loc=28, 17
	target
		Type=Identifier
		Loc=28, 20
	)
		Type=Terminal
		Loc=28, 26

28: 		{
	{
		Type=Terminal
		Loc=29, 9

29: 			data[i] = data[i-1] + data[i-2];
	data
		Type=Identifier
		Loc=30, 13
	[
		Type=Terminal
		Loc=30, 17
	i
		Type=Identifier
		Loc=30, 18
	]
		Type=Terminal
		Loc=30, 19
	=
		Type=Terminal
		Loc=30, 21
	data
		Type=Identifier
		Loc=30, 23
	[
		Type=Terminal
		Loc=30, 27
	i
		Type=Identifier
		Loc=30, 28
	-
		Type=Terminal
		Loc=30, 29
	1
		Type=Number
		Loc=30, 30
	]
		Type=Terminal
		Loc=30, 31
	+
		Type=Terminal
		Loc=30, 33
	data
		Type=Identifier
		Loc=30, 35
	[
		Type=Terminal
		Loc=30, 39
	i
		Type=Identifier
		Loc=30, 40
	-
		Type=Terminal
		Loc=30, 41
	2
		Type=Number
		Loc=30, 42
	]
		Type=Terminal
		Loc=30, 43
	;
		Type=Terminal
		Loc=30, 44

30: 			i = i + 1;
	i
		Type=Identifier
		Loc=31, 13
	=
		Type=Terminal
		Loc=31, 15
	i
		Type=Identifier
		Loc=31, 17
	+
		Type=Terminal
		Loc=31, 19
	1
		Type=Number
		Loc=31, 21
	;
		Type=Terminal
		Loc=31, 22

31: 		}
	}
		Type=Terminal
		Loc=32, 9

32: 		return data[target];
	return
		Type=Terminal
		Loc=33, 9
	data
		Type=Identifier
		Loc=33, 16
	[
		Type=Terminal
		Loc=33, 20
	target
		Type=Identifier
		Loc=33, 21
	]
		Type=Terminal
		Loc=33, 27
	;
		Type=Terminal
		Loc=33, 28

33: 	}
	}
		Type=Terminal
		Loc=34, 5

34: 	

35: 	int printNumber(int number)
	int
		Type=Terminal
		Loc=36, 5
	printNumber
		Type=Identifier
		Loc=36, 9
	(
		Type=Terminal
		Loc=36, 20
	int
		Type=Terminal
		Loc=36, 21
	number
		Type=Identifier
		Loc=36, 25
	)
		Type=Terminal
		Loc=36, 31

36: 	{
	{
		Type=Terminal
		Loc=37, 5

37: 		if (number == 0)
	if
		Type=Terminal
		Loc=38, 9
	(
		Type=Terminal
		Loc=38, 12
	number
		Type=Identifier
		Loc=38, 13
	==
		Type=Terminal
		Loc=38, 20
	0
		Type=Number
		Loc=38, 23
	)
		Type=Terminal
		Loc=38, 24

38: 			System.out('0');
	System
		Type=Terminal
		Loc=39, 13
	.
		Type=Terminal
		Loc=39, 19
	out
		Type=Terminal
		Loc=39, 20
	(
		Type=Terminal
		Loc=39, 23
	'0'
		Type=CharConst
		Loc=39, 24
	)
		Type=Terminal
		Loc=39, 27
	;
		Type=Terminal
		Loc=39, 28

39: 		else
	else
		Type=Terminal
		Loc=40, 9

40: 			rec_printNumber(number);
	rec_printNumber
		Type=Identifier
		Loc=41, 13
	(
		Type=Terminal
		Loc=41, 28
	number
		Type=Identifier
		Loc=41, 29
	)
		Type=Terminal
		Loc=41, 35
	;
		Type=Terminal
		Loc=41, 36

41: 		return 0;
	return
		Type=Terminal
		Loc=42, 9
	0
		Type=Number
		Loc=42, 16
	;
		Type=Terminal
		Loc=42, 17

42: 	}
	}
		Type=Terminal
		Loc=43, 5

43: 	

44: 	int rec_printNumber(int number)
	int
		Type=Terminal
		Loc=45, 5
	rec_printNumber
		Type=Identifier
		Loc=45, 9
	(
		Type=Terminal
		Loc=45, 24
	int
		Type=Terminal
		Loc=45, 25
	number
		Type=Identifier
		Loc=45, 29
	)
		Type=Terminal
		Loc=45, 35

45: 	{
	{
		Type=Terminal
		Loc=46, 5

46: 		int rest;
	int
		Type=Terminal
		Loc=47, 9
	rest
		Type=Identifier
		Loc=47, 13
	;
		Type=Terminal
		Loc=47, 17

47: 		int div;
	int
		Type=Terminal
		Loc=48, 9
	div
		Type=Identifier
		Loc=48, 13
	;
		Type=Terminal
		Loc=48, 16

48: 		if (number != 0)
	if
		Type=Terminal
		Loc=49, 9
	(
		Type=Terminal
		Loc=49, 12
	number
		Type=Identifier
		Loc=49, 13
	!=
		Type=Terminal
		Loc=49, 20
	0
		Type=Number
		Loc=49, 23
	)
		Type=Terminal
		Loc=49, 24

49: 		{
	{
		Type=Terminal
		Loc=50, 9

50: 			rest = number % 10;
	rest
		Type=Identifier
		Loc=51, 13
	=
		Type=Terminal
		Loc=51, 18
	number
		Type=Identifier
		Loc=51, 20
	%
		Type=Terminal
		Loc=51, 27
	10
		Type=Number
		Loc=51, 29
	;
		Type=Terminal
		Loc=51, 31

51: 			div = number / 10;
	div
		Type=Identifier
		Loc=52, 13
	=
		Type=Terminal
		Loc=52, 17
	number
		Type=Identifier
		Loc=52, 19
	/
		Type=Terminal
		Loc=52, 26
	10
		Type=Number
		Loc=52, 28
	;
		Type=Terminal
		Loc=52, 30

52: 			rec_printNumber(div);
	rec_printNumber
		Type=Identifier
		Loc=53, 13
	(
		Type=Terminal
		Loc=53, 28
	div
		Type=Identifier
		Loc=53, 29
	)
		Type=Terminal
		Loc=53, 32
	;
		Type=Terminal
		Loc=53, 33

53: 			rest = rest + 48;
	rest
		Type=Identifier
		Loc=54, 13
	=
		Type=Terminal
		Loc=54, 18
	rest
		Type=Identifier
		Loc=54, 20
	+
		Type=Terminal
		Loc=54, 25
	48
		Type=Number
		Loc=54, 27
	;
		Type=Terminal
		Loc=54, 29

54: 			System.out(rest);
	System
		Type=Terminal
		Loc=55, 13
	.
		Type=Terminal
		Loc=55, 19
	out
		Type=Terminal
		Loc=55, 20
	(
		Type=Terminal
		Loc=55, 23
	rest
		Type=Identifier
		Loc=55, 24
	)
		Type=Terminal
		Loc=55, 28
	;
		Type=Terminal
		Loc=55, 29

55: 		}
	}
		Type=Terminal
		Loc=56, 9

56: 		else ;
	else
		Type=Terminal
		Loc=57, 9
	;
		Type=Terminal
		Loc=57, 14

57: 		return 0;
	return
		Type=Terminal
		Loc=58, 9
	0
		Type=Number
		Loc=58, 16
	;
		Type=Terminal
		Loc=58, 17

58: 	}
	}
		Type=Terminal
		Loc=59, 5

59: }
	}
		Type=Terminal
		Loc=60, 1

265 tokens
Lexing and parsing  in 0.256
Semantic analysis in 0.018
Intermediate code generation in 0.042
Target code generation in 0.154
Concluded in 0.568 seconds

