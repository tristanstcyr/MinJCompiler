class MathTest 
{ 
    void main() 
    {
		testOperatorPriority(0);
		testParenthesis(0);
		testNegation(0);
    }
	
	int testOperatorPriority(int i)
	{
		int a;
		a = 3 + 10 / 10;
		return equals(a, 4);
	}
	
	int testParenthesis(int i)
	{
		int a;
		a = (3 + 10) / 10;
		return equals(a, 1);
	}
	
	int testNegation(int i)
	{
		int a;
		int b;
		a = -10;
		b = 0 - 10;
		return equals(a, b);
	}
	
	int equals(int actual, int expected)
	{
		if (actual == expected)
		{
			System.out('P','A','S','S','\n');
		}
		else
		{
			System.out('F','A','I','L','-', '>',' ');
			printNumber(actual);
			System.out(' ', ':',' ');
			printNumber(expected);
			System.out('\n');
		}
		
		return 0;
	}
	
	int printNumber(int number)
	{
		if (number == 0)
			System.out('0');
		else
			if (number < 0)
			{
				System.out('-');
				number = -number;
			} else ;
			rec_printNumber(number);
		return 0;
	}
	
	int rec_printNumber(int number)
	{
		int rest;
		int div;
		if (number != 0)
		{
			rest = number % 10;
			div = number / 10;
			rec_printNumber(div);
			rest = rest + 48;
			System.out(rest);
		}
		else ;
		return 0;
	}
	
	int testOperatorPriority2(int i)
	{
		int a;
		a = 3 + 10 / 10;
		return equals(a, 4);
	}
	
	int testParenthesis2(int i)
	{
		int a;
		a = (3 + 10) / 10;
		return equals(a, 1);
	}
	
	int testNegation2(int i)
	{
		int a;
		int b;
		a = -10;
		b = 0 - 10;
		return equals(a, b);
	}
	
	int equals2(int actual, int expected)
	{
		if (actual == expected)
		{
			System.out('P','A','S','S','\n');
		}
		else
		{
			System.out('F','A','I','L','-', '>',' ');
			printNumber(actual);
			System.out(' ', ':',' ');
			printNumber(expected);
			System.out('\n');
		}
		
		return 0;
	}
	
	int printNumber2(int number)
	{
		if (number == 0)
			System.out('0');
		else
			if (number < 0)
			{
				System.out('-');
				number = -number;
			} else ;
			rec_printNumber(number);
		return 0;
	}
	
	int rec_printNumber2(int number)
	{
		int rest;
		int div;
		if (number != 0)
		{
			rest = number % 10;
			div = number / 10;
			rec_printNumber(div);
			rest = rest + 48;
			System.out(rest);
		}
		else ;
		return 0;
	}
	
	//------
	int testOperatorPriority4(int i)
	{
		int a;
		a = 3 + 10 / 10;
		return equals(a, 4);
	}
	
	int testParenthesis4(int i)
	{
		int a;
		a = (3 + 10) / 10;
		return equals(a, 1);
	}
	
	int testNegation4(int i)
	{
		int a;
		int b;
		a = -10;
		b = 0 - 10;
		return equals(a, b);
	}
	
	int equals4(int actual, int expected)
	{
		if (actual == expected)
		{
			System.out('P','A','S','S','\n');
		}
		else
		{
			System.out('F','A','I','L','-', '>',' ');
			printNumber(actual);
			System.out(' ', ':',' ');
			printNumber(expected);
			System.out('\n');
		}
		
		return 0;
	}
	
	int printNumber4(int number)
	{
		if (number == 0)
			System.out('0');
		else
			if (number < 0)
			{
				System.out('-');
				number = -number;
			} else ;
			rec_printNumber(number);
		return 0;
	}
	
	int rec_printNumber4(int number)
	{
		int rest;
		int div;
		if (number != 0)
		{
			rest = number % 10;
			div = number / 10;
			rec_printNumber(div);
			rest = rest + 48;
			System.out(rest);
		}
		else ;
		return 0;
	}
	
	int testOperatorPriority3(int i)
	{
		int a;
		a = 3 + 10 / 10;
		return equals(a, 4);
	}
	
	int testParenthesis3(int i)
	{
		int a;
		a = (3 + 10) / 10;
		return equals(a, 1);
	}
	
	int testNegation3(int i)
	{
		int a;
		int b;
		a = -10;
		b = 0 - 10;
		return equals(a, b);
	}
	
	int equals3(int actual, int expected)
	{
		if (actual == expected)
		{
			System.out('P','A','S','S','\n');
		}
		else
		{
			System.out('F','A','I','L','-', '>',' ');
			printNumber(actual);
			System.out(' ', ':',' ');
			printNumber(expected);
			System.out('\n');
		}
		
		return 0;
	}
	
	int printNumber3(int number)
	{
		if (number == 0)
			System.out('0');
		else
			if (number < 0)
			{
				System.out('-');
				number = -number;
			} else ;
			rec_printNumber(number);
		return 0;
	}
	
	int rec_printNumber3(int number)
	{
		int rest;
		int div;
		if (number != 0)
		{
			rest = number % 10;
			div = number / 10;
			rec_printNumber(div);
			rest = rest + 48;
			System.out(rest);
		}
		else ;
		return 0;
	}
}