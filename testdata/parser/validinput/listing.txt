0: class Example 
	class
		Type=Terminal
		Loc=1, 1
	Example
		Type=Identifier
		Loc=1, 7

1: { 
	{
		Type=Terminal
		Loc=2, 1

2:     void main() 
	void
		Type=Terminal
		Loc=3, 5
	main
		Type=Terminal
		Loc=3, 10
	(
		Type=Terminal
		Loc=3, 14
	)
		Type=Terminal
		Loc=3, 15

3:     {
	{
		Type=Terminal
		Loc=4, 5

4: 		int[] array = new int[10];
	int
		Type=Terminal
		Loc=5, 3
	[
		Type=Terminal
		Loc=5, 6
	]
		Type=Terminal
		Loc=5, 7
	array
		Type=Identifier
		Loc=5, 9
	=
		Type=Terminal
		Loc=5, 15
	new
		Type=Terminal
		Loc=5, 17
	int
		Type=Terminal
		Loc=5, 21
	[
		Type=Terminal
		Loc=5, 24
	10
		Type=Number
		Loc=5, 25
	]
		Type=Terminal
		Loc=5, 27
	;
		Type=Terminal
		Loc=5, 28

5: 		int i;
	int
		Type=Terminal
		Loc=6, 3
	i
		Type=Identifier
		Loc=6, 7
	;
		Type=Terminal
		Loc=6, 8

6: 		int n;
	int
		Type=Terminal
		Loc=7, 3
	n
		Type=Identifier
		Loc=7, 7
	;
		Type=Terminal
		Loc=7, 8

7: 		i = 0;
	i
		Type=Identifier
		Loc=8, 3
	=
		Type=Terminal
		Loc=8, 5
	0
		Type=Number
		Loc=8, 7
	;
		Type=Terminal
		Loc=8, 8

8: 		while (i < 10)
	while
		Type=Terminal
		Loc=9, 3
	(
		Type=Terminal
		Loc=9, 9
	i
		Type=Identifier
		Loc=9, 10
	<
		Type=Terminal
		Loc=9, 12
	10
		Type=Number
		Loc=9, 14
	)
		Type=Terminal
		Loc=9, 16

9: 		{
	{
		Type=Terminal
		Loc=10, 3

10: 			array[i] = i;
	array
		Type=Identifier
		Loc=11, 4
	[
		Type=Terminal
		Loc=11, 9
	i
		Type=Identifier
		Loc=11, 10
	]
		Type=Terminal
		Loc=11, 11
	=
		Type=Terminal
		Loc=11, 13
	i
		Type=Identifier
		Loc=11, 15
	;
		Type=Terminal
		Loc=11, 16

11: 			i = i + 1;
	i
		Type=Identifier
		Loc=12, 4
	=
		Type=Terminal
		Loc=12, 6
	i
		Type=Identifier
		Loc=12, 8
	+
		Type=Terminal
		Loc=12, 10
	1
		Type=Number
		Loc=12, 12
	;
		Type=Terminal
		Loc=12, 13

12: 		}
	}
		Type=Terminal
		Loc=13, 3

13: 		i = 0;
	i
		Type=Identifier
		Loc=14, 3
	=
		Type=Terminal
		Loc=14, 5
	0
		Type=Number
		Loc=14, 7
	;
		Type=Terminal
		Loc=14, 8

14: 		while(i < 10)
	while
		Type=Terminal
		Loc=15, 3
	(
		Type=Terminal
		Loc=15, 8
	i
		Type=Identifier
		Loc=15, 9
	<
		Type=Terminal
		Loc=15, 11
	10
		Type=Number
		Loc=15, 13
	)
		Type=Terminal
		Loc=15, 15

15: 		{
	{
		Type=Terminal
		Loc=16, 3

16: 			n = array[i];
	n
		Type=Identifier
		Loc=17, 4
	=
		Type=Terminal
		Loc=17, 6
	array
		Type=Identifier
		Loc=17, 8
	[
		Type=Terminal
		Loc=17, 13
	i
		Type=Identifier
		Loc=17, 14
	]
		Type=Terminal
		Loc=17, 15
	;
		Type=Terminal
		Loc=17, 16

17: 			printNumber(n);
	printNumber
		Type=Identifier
		Loc=18, 4
	(
		Type=Terminal
		Loc=18, 15
	n
		Type=Identifier
		Loc=18, 16
	)
		Type=Terminal
		Loc=18, 17
	;
		Type=Terminal
		Loc=18, 18

18: 			System.out(' ');
	System
		Type=Terminal
		Loc=19, 4
	.
		Type=Terminal
		Loc=19, 10
	out
		Type=Terminal
		Loc=19, 11
	(
		Type=Terminal
		Loc=19, 14
	' '
		Type=CharConst
		Loc=19, 15
	)
		Type=Terminal
		Loc=19, 18
	;
		Type=Terminal
		Loc=19, 19

19: 			i = i + 1;
	i
		Type=Identifier
		Loc=20, 4
	=
		Type=Terminal
		Loc=20, 6
	i
		Type=Identifier
		Loc=20, 8
	+
		Type=Terminal
		Loc=20, 10
	1
		Type=Number
		Loc=20, 12
	;
		Type=Terminal
		Loc=20, 13

20: 		}
	}
		Type=Terminal
		Loc=21, 3

21:     }
	}
		Type=Terminal
		Loc=22, 5

22: 	

23: 	int printNumber(int number)
	int
		Type=Terminal
		Loc=24, 2
	printNumber
		Type=Identifier
		Loc=24, 6
	(
		Type=Terminal
		Loc=24, 17
	int
		Type=Terminal
		Loc=24, 18
	number
		Type=Identifier
		Loc=24, 22
	)
		Type=Terminal
		Loc=24, 28

24: 	{
	{
		Type=Terminal
		Loc=25, 2

25: 		if (number == 0)
	if
		Type=Terminal
		Loc=26, 3
	(
		Type=Terminal
		Loc=26, 6
	number
		Type=Identifier
		Loc=26, 7
	==
		Type=Terminal
		Loc=26, 14
	0
		Type=Number
		Loc=26, 17
	)
		Type=Terminal
		Loc=26, 18

26: 			System.out('0');
	System
		Type=Terminal
		Loc=27, 4
	.
		Type=Terminal
		Loc=27, 10
	out
		Type=Terminal
		Loc=27, 11
	(
		Type=Terminal
		Loc=27, 14
	'0'
		Type=CharConst
		Loc=27, 15
	)
		Type=Terminal
		Loc=27, 18
	;
		Type=Terminal
		Loc=27, 19

27: 		else
	else
		Type=Terminal
		Loc=28, 3

28: 			rec_printNumber(number);
	rec_printNumber
		Type=Identifier
		Loc=29, 4
	(
		Type=Terminal
		Loc=29, 19
	number
		Type=Identifier
		Loc=29, 20
	)
		Type=Terminal
		Loc=29, 26
	;
		Type=Terminal
		Loc=29, 27

29: 		return 0;
	return
		Type=Terminal
		Loc=30, 3
	0
		Type=Number
		Loc=30, 10
	;
		Type=Terminal
		Loc=30, 11

30: 	}
	}
		Type=Terminal
		Loc=31, 2

31: 	

32: 	int rec_printNumber(int number)
	int
		Type=Terminal
		Loc=33, 2
	rec_printNumber
		Type=Identifier
		Loc=33, 6
	(
		Type=Terminal
		Loc=33, 21
	int
		Type=Terminal
		Loc=33, 22
	number
		Type=Identifier
		Loc=33, 26
	)
		Type=Terminal
		Loc=33, 32

33: 	{
	{
		Type=Terminal
		Loc=34, 2

34: 		int rest;
	int
		Type=Terminal
		Loc=35, 3
	rest
		Type=Identifier
		Loc=35, 7
	;
		Type=Terminal
		Loc=35, 11

35: 		int div;
	int
		Type=Terminal
		Loc=36, 3
	div
		Type=Identifier
		Loc=36, 7
	;
		Type=Terminal
		Loc=36, 10

36: 		if (number != 0)
	if
		Type=Terminal
		Loc=37, 3
	(
		Type=Terminal
		Loc=37, 6
	number
		Type=Identifier
		Loc=37, 7
	!=
		Type=Terminal
		Loc=37, 14
	0
		Type=Number
		Loc=37, 17
	)
		Type=Terminal
		Loc=37, 18

37: 		{
	{
		Type=Terminal
		Loc=38, 3

38: 			rest = number % 10;
	rest
		Type=Identifier
		Loc=39, 4
	=
		Type=Terminal
		Loc=39, 9
	number
		Type=Identifier
		Loc=39, 11
	%
		Type=Terminal
		Loc=39, 18
	10
		Type=Number
		Loc=39, 20
	;
		Type=Terminal
		Loc=39, 22

39: 			div = number / 10;
	div
		Type=Identifier
		Loc=40, 4
	=
		Type=Terminal
		Loc=40, 8
	number
		Type=Identifier
		Loc=40, 10
	/
		Type=Terminal
		Loc=40, 17
	10
		Type=Number
		Loc=40, 19
	;
		Type=Terminal
		Loc=40, 21

40: 			rec_printNumber(div);
	rec_printNumber
		Type=Identifier
		Loc=41, 4
	(
		Type=Terminal
		Loc=41, 19
	div
		Type=Identifier
		Loc=41, 20
	)
		Type=Terminal
		Loc=41, 23
	;
		Type=Terminal
		Loc=41, 24

41: 			rest = rest + 48;
	rest
		Type=Identifier
		Loc=42, 4
	=
		Type=Terminal
		Loc=42, 9
	rest
		Type=Identifier
		Loc=42, 11
	+
		Type=Terminal
		Loc=42, 16
	48
		Type=Number
		Loc=42, 18
	;
		Type=Terminal
		Loc=42, 20

42: 			System.out(rest);
	System
		Type=Terminal
		Loc=43, 4
	.
		Type=Terminal
		Loc=43, 10
	out
		Type=Terminal
		Loc=43, 11
	(
		Type=Terminal
		Loc=43, 14
	rest
		Type=Identifier
		Loc=43, 15
	)
		Type=Terminal
		Loc=43, 19
	;
		Type=Terminal
		Loc=43, 20

43: 		}
	}
		Type=Terminal
		Loc=44, 3

44: 		else ;
	else
		Type=Terminal
		Loc=45, 3
	;
		Type=Terminal
		Loc=45, 8

45: 		return 0;
	return
		Type=Terminal
		Loc=46, 3
	0
		Type=Number
		Loc=46, 10
	;
		Type=Terminal
		Loc=46, 11

46: 	}
	}
		Type=Terminal
		Loc=47, 2

47: 	

48: 	int fib(int i)
	int
		Type=Terminal
		Loc=49, 2
	fib
		Type=Identifier
		Loc=49, 6
	(
		Type=Terminal
		Loc=49, 9
	int
		Type=Terminal
		Loc=49, 10
	i
		Type=Identifier
		Loc=49, 14
	)
		Type=Terminal
		Loc=49, 15

49: 	{
	{
		Type=Terminal
		Loc=50, 2

50: 		int a;
	int
		Type=Terminal
		Loc=51, 3
	a
		Type=Identifier
		Loc=51, 7
	;
		Type=Terminal
		Loc=51, 8

51: 		int b;
	int
		Type=Terminal
		Loc=52, 3
	b
		Type=Identifier
		Loc=52, 7
	;
		Type=Terminal
		Loc=52, 8

52: 		if (i == 0)
	if
		Type=Terminal
		Loc=53, 3
	(
		Type=Terminal
		Loc=53, 6
	i
		Type=Identifier
		Loc=53, 7
	==
		Type=Terminal
		Loc=53, 9
	0
		Type=Number
		Loc=53, 12
	)
		Type=Terminal
		Loc=53, 13

53: 		{
	{
		Type=Terminal
		Loc=54, 3

54: 			return i;
	return
		Type=Terminal
		Loc=55, 4
	i
		Type=Identifier
		Loc=55, 11
	;
		Type=Terminal
		Loc=55, 12

55: 		}
	}
		Type=Terminal
		Loc=56, 3

56: 		else
	else
		Type=Terminal
		Loc=57, 3

57: 		{
	{
		Type=Terminal
		Loc=58, 3

58: 			if (i == 1)
	if
		Type=Terminal
		Loc=59, 4
	(
		Type=Terminal
		Loc=59, 7
	i
		Type=Identifier
		Loc=59, 8
	==
		Type=Terminal
		Loc=59, 10
	1
		Type=Number
		Loc=59, 13
	)
		Type=Terminal
		Loc=59, 14

59: 			{
	{
		Type=Terminal
		Loc=60, 4

60: 				return 1;
	return
		Type=Terminal
		Loc=61, 5
	1
		Type=Number
		Loc=61, 12
	;
		Type=Terminal
		Loc=61, 13

61: 			}
	}
		Type=Terminal
		Loc=62, 4

62: 			else
	else
		Type=Terminal
		Loc=63, 4

63: 			{
	{
		Type=Terminal
		Loc=64, 4

64: 				a = i - 1;
	a
		Type=Identifier
		Loc=65, 5
	=
		Type=Terminal
		Loc=65, 7
	i
		Type=Identifier
		Loc=65, 9
	-
		Type=Terminal
		Loc=65, 11
	1
		Type=Number
		Loc=65, 13
	;
		Type=Terminal
		Loc=65, 14

65: 				b = i - 2;
	b
		Type=Identifier
		Loc=66, 5
	=
		Type=Terminal
		Loc=66, 7
	i
		Type=Identifier
		Loc=66, 9
	-
		Type=Terminal
		Loc=66, 11
	2
		Type=Number
		Loc=66, 13
	;
		Type=Terminal
		Loc=66, 14

66: 				return fib(a) + fib(b);
	return
		Type=Terminal
		Loc=67, 5
	fib
		Type=Identifier
		Loc=67, 12
	(
		Type=Terminal
		Loc=67, 15
	a
		Type=Identifier
		Loc=67, 16
	)
		Type=Terminal
		Loc=67, 17
	+
		Type=Terminal
		Loc=67, 19
	fib
		Type=Identifier
		Loc=67, 21
	(
		Type=Terminal
		Loc=67, 24
	b
		Type=Identifier
		Loc=67, 25
	)
		Type=Terminal
		Loc=67, 26
	;
		Type=Terminal
		Loc=67, 27

67: 			}
	}
		Type=Terminal
		Loc=68, 4

68: 		}
	}
		Type=Terminal
		Loc=69, 3

69: 	}
	}
		Type=Terminal
		Loc=70, 2

70: }
	}
		Type=Terminal
		Loc=71, 1

Concluded in 0.613 seconds

